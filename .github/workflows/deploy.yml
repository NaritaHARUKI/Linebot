name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          pnpm install
          echo "Dependencies installed"

      - name: Build the project
        run: |
          echo "Building the project..."
          pnpm run build
          echo "Build completed"

      - name: Backup and deploy to honda_tusaba
        id: backup_deploy_honda_tusaba
        run: |
          echo "Backing up and deploying to server 1..."
          ssh -i ~/.ssh/github-actions user@192.168.0.32 "
          cd LineBot && \
          mkdir -p backup & \
          cp -r . backup/LineBot_backup_$(date +%Y%m%d%H%M%S)
          "
          echo "Backup created on server 1"
          ssh -i ~/.ssh/github-actions user@192.168.0.32 "
          cd LineBot && \
          pnpm install && \
          pnpm run build"
          ssh -i ~/.ssh/github-actions user@192.168.0.32 "
          cd LineBot && \
          git pull && \
          pm2 restart LineBot"
          echo "Deployed and restarted on server 1"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Backup and deploy to honda_tusaba 2
        if: steps.backup_deploy_honda_tusaba.outcome == 'success'
        id: backup_deploy_honda_tusaba_2
        run: |
          echo "Backing up and deploying to server 2..."
          ssh -i ~/.ssh/github-actions user@192.168.0.33 "
          cd LineBot && \
          mkdir -p backup && \
          cp -r . backup/LineBot_backup_$(date +%Y%m%d%H%M%S)"
          echo "Backup created on server 2"
          ssh -i ~/.ssh/github-actions user@192.168.0.33 "
          cd LineBot && \
          pnpm install && \
          pnpm run build"
          ssh -i ~/.ssh/github-actions user@192.168.0.33 "
          cd LineBot && \
          git pull && \
          pm2 restart LineBot"
          echo "Deployed and restarted on server 2"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Rollback if deploy fails (server 1)
        if: steps.backup_deploy_honda_tusaba.outcome != 'success'
        run: |
          echo "Deploy failed on server 1. Rolling back..."
          ssh -i ~/.ssh/github-actions user@192.168.0.32 "
          cd LineBot && \
          cp -r backup/LineBot_backup_latest/* . && \
          pm2 restart LineBot"
          echo "Rollback completed on server 1"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Rollback if deploy fails (server 2)
        if: steps.backup_deploy_honda_tusaba_2.outcome != 'success'
        run: |
          echo "Deploy failed on server 2. Rolling back..."
          ssh -i ~/.ssh/github-actions user@192.168.0.33 "cd LineBot && \
          cp -r backup/LineBot_backup_latest/* . && \
          pm2 restart LineBot"
          echo "Rollback completed on server 2"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Clean up backup
        if: steps.backup_deploy_honda_tusaba_2.outcome == 'success'
        run: |
          echo "Cleaning up backups on both servers..."
          ssh -i ~/.ssh/github-actions user@192.168.0.32 "rm -rf backup/*"
          ssh -i ~/.ssh/github-actions user@192.168.0.33 "rm -rf backup/*"
          echo "Backups cleaned up on both servers"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
